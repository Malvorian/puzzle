{"version":3,"sources":["components/Loading/loading.gif","components/ConnectMetamask/metamask.svg","components/FormAndPreview/FormAndPreview.jsx","components/ShroomYNFTImage/ShroomYNFTImage.jsx","components/ShroomYNFTDetails/ShroomYNFTDetails.jsx","components/Loading/Loading.jsx","components/AllShroomieS/AllShroomieS.jsx","components/HeroNFTImage/HeroNFTImage.jsx","components/HeroNFTDetails/HeroNFTDetails.jsx","components/AllHeros/AllHeros.jsx","components/AccountDetails/AccountDetails.jsx","components/ContractNotDeployed/ContractNotDeployed.jsx","components/ConnectMetamask/ConnectToMetamask.jsx","components/Navbar/Navbar.jsx","components/MyShroomYNFTDetails/MyShroomYNFTDetails.jsx","components/MyShroomieS/MyShroomieS.jsx","components/MyHeroNFTDetails/MyHeroNFTDetails.jsx","components/MyHeros/MyHeros.jsx","components/Queries/Queries.jsx","components/ChangeMintPrice/ChangeMintPrice.jsx","components/HeroDetail/HeroDetail.jsx","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FormAndPreview","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","setMintBtnTimer","setMintBtnTimerHero","stop","callMintMyNFTFromApp","e","preventDefault","mintMyNFT","state","mintPrice","callMintMyNFTFromAppHero","mintMyNFTHero","mintPriceHero","callMintMyLLG","mintMyLLG","noOfToken","window","web3","utils","fromWei","toString","mintPriceLLG","balanceLLG","react_default","createElement","onSubmit","className","htmlFor","id","style","fontSize","letterSpacing","type","Component","ShroomYNFTImage","_ref","tokenId","shroomieSContract","shroomy_card","display","justifyContent","border","shroomy_image","width","height","_React$useState","React","useState","_React$useState2","slicedToArray","image","setImage","getImageData","_ref2","methods","getTokenMetaData","sent","apply","arguments","useEffect","substring","lastIndexOf","length","src","alt","autoPlay","loop","ShroomYNFTDetails","key","shroomy","toNumber","tokenName","mintedBy","substr","slice","currentOwner","previousOwner","price","numberOfTransfers","accountAddress","forSale","value","onClick","buyShroomY","target","Fragment","disabled","Loading","loadingGIF","AllShroomieS","shroomieS","totalTokensMinted","_useState","_useState2","loading","setLoading","undefined","metaData","map","components_Loading_Loading","components_ShroomYNFTImage_ShroomYNFTImage","components_ShroomYNFTDetails_ShroomYNFTDetails","HeroNFTImage","tokenURI","muted","noHeroBuy","_this2","hero","userAddress","noInSale","salePrice","alert","buyHero","required","name","placeholder","onChange","setState","AllHeros","heroesContract","totalInMarketplace","marketplaceData","changeTokenPriceHero","toggleForSaleHero","i","react_router_dom","to","pathname","concat","components_HeroNFTImage_HeroNFTImage","HeroNFTDetails","AccountDetails","accountBalance","ContractNotDeployed","ConnectToMetamask","connectToMetamask","metamaskIcon","marginLeft","Navbar","data-toggle","data-target","contractOwner","MyShroomYNFTDetails","_props$shroomy","newShroomYPrice","receiver","newPrice","changeTokenPrice","objectSpread","toggleForSale","giftShroomY","MyShroomieS","totalTokensOwnedByAccount","_useState3","_useState4","myShroomieS","setMyShroomieS","my_shroomies","filter","components_MyShroomYNFTDetails_MyShroomYNFTDetails","MyHeroNFTDetails","_props$hero","balance","sales","stakes","setNewPrice","_React$useState3","_React$useState4","onSale","setOnSale","_React$useState5","_React$useState6","onStake","setOnStake","_React$useState7","_React$useState8","toGift","setToGift","_React$useState9","_React$useState10","setReceiver","setStakeTimer","toggleSale","toggleStake","giftHero","MyHeros","totalMyHero","myHeroData","rewardEarned","components_MyHeroNFTDetails_MyHeroNFTDetails","Queries","tokenIdForOwner","setTokenIdForOwner","tokenOwner","setTokenOwner","_useState5","_useState6","tokenIdForOwnerNotFound","setTokenIdForOwnerNotFound","_useState7","_useState8","tokenIdForMetadata","setTokenIdForMetadata","_useState9","_useState10","tokenMetadata","setTokenMetadata","_useState11","_useState12","tokenMetadataLink","setTokenMetadataLink","_useState13","_useState14","tokenIdForMetadataNotFound","setTokenIdForMetadataNotFound","getTokenOwner","owner","setTimeout","t0","_x","getTokenMetadata","_callee2","metadata","_context2","_x2","data-dismiss","href","rel","ChangeMintPrice","setnewPrice","priceUpdatedError","setpriceUpdatedError","newPriceHero","setnewPriceHero","priceUpdatedErrorHero","setpriceUpdatedErrorHero","changePrice","res","setMintPrice","toWei","send","from","location","reload","changePriceHero","HeroDetail","item","setItem","matchedItem","heroName","split","console","log","herodata","forEach","dna","rarity","description","App","loadWeb3","loadBlockchainData","setMetaData","setMarketplace","setMyHeroes","k","tokenid","l","useritem","useraddress","data","heroes","users","toConsumableArray","_callee3","my_data","no","_context3","user","balanceOf","abrupt","mintBtn","document","getElementById","lastMintTime","localStorage","getItem","innerHTML","checkIfCanMint","parseInt","lastMintTimeHero","checkIfCanMintHero","countDownTime","interval","setInterval","now","Date","getTime","diff","removeAttribute","removeItem","clearInterval","minutes","Math","floor","seconds","setAttribute","stakeTimeStamp","checkIfCanStake","days","hours","_callee4","_context4","ethereum","Web3","_callee5","accounts","networkId","networkData","shroomieSCount","shroomY","networkDataHero","heroesCount","usersCount","address","j","temp","networkDataHeroSale","heroesSaleContract","LLGContract","_context5","eth","getAccounts","metamaskConnected","getBalance","net","getId","ShroomieS","networks","Contract","abi","contractDetected","shroomYCounter","allShroomieS","getNumberOfTokensMinted","getTotalNumberOfTokensOwnedByAnAddress","getOwner","getMintPrice","Heroes","timestamps","rewards","heroCounter","userCounter","allHeroes","allUsers","getSales","getStakes","getSalePrice","HeroesSale","heroesSaleContractAddress","LucidLandsGem","LLGContractAddress","LLGContractOwner","_callee6","_context6","enable","_callee8","_context8","_ref8","_callee7","result","_context7","fetch","json","Number","_ref9","_callee9","tokenPrice","index","uriIsUsed","_context9","tokenURIExists","tokenNameExists","mintShroomY","on","randomPick","arr","random","find","val","pop","_ref10","_callee10","prob","rarityid","heroes_rarity_match","hero_matched","_context10","rarity_id","transfer","once","receipt","mintHero","_x3","_ref11","_callee11","_context11","_x4","newTokenPrice","buyToken","giftToken","amount","toggle","calculateReward","_ref12","_callee12","timestamp","_context12","reward_per_year","_x5","_x6","_ref13","_callee13","reward","_context13","toggleForStake","_x7","_x8","_x9","_x10","setPrice","basename","components_Navbar_Navbar","react_router","path","exact","render","components_AccountDetails_AccountDetails","components_FormAndPreview_FormAndPreview","components_AllShroomieS_AllShroomieS","components_AllHeros_AllHeros","components_MyShroomieS_MyShroomieS","components_MyHeros_MyHeros","components_Queries_Queries","components_ChangeMintPrice_ChangeMintPrice","components_HeroDetail_HeroDetail","components_ContractNotDeployed_ContractNotDeployed","ConnectMetamask_ConnectToMetamask","Boolean","hostname","match","ReactDOM","StrictMode","src_components_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.67ccc9f6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.26ef8bb4.gif\";","module.exports = __webpack_public_path__ + \"static/media/metamask.fbf33967.svg\";","import React, { Component } from \"react\";\n\nclass FormAndPreview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mintPrice: window.web3.utils.fromWei(props.mintPrice.toString(), \"Ether\"),\n      mintPriceHero: window.web3.utils.fromWei(props.mintPriceHero.toString(), \"Ether\"),\n      mintPriceLLG: window.web3.utils.fromWei(props.mintPriceLLG.toString(), \"Ether\"),\n      noOfToken: '',\n      balanceLLG: window.web3.utils.fromWei(props.balanceLLG.toString(), \"Ether\")\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.props.setMintBtnTimer();\n    await this.props.setMintBtnTimerHero();\n  };\n\n  callMintMyNFTFromApp = (e) => {\n    e.preventDefault();\n    this.props.mintMyNFT(\n      this.state.mintPrice\n    );\n  };\n\n  callMintMyNFTFromAppHero = (e) => {\n    e.preventDefault();\n    this.props.mintMyNFTHero(\n      this.state.mintPriceHero\n    );\n  };\n\n  callMintMyLLG = (e) => {\n    e.preventDefault();\n    this.props.mintMyLLG(\n      this.state.noOfToken\n    );\n  };\n\n  render() {\n    return (\n      <div>\n\n        {/* <form onSubmit={this.callMintMyLLG} className=\"pt-4 mt-1\">\n          <div className=\"col-md-6\">\n            <div>\n              <label htmlFor=\"price\">Buy LLG Token</label>\n              <br />\n              <label htmlFor=\"price\">Available - {this.state.balanceLLG}</label>\n              <input\n                required\n                type=\"text\"\n                className=\"form-control mb-2\"\n                value={this.noOfToken}\n                placeholder=\"Enter No. of tokens to buy\"\n                onChange={(e) => { this.state.noOfToken = e.target.value }}\n              />\n              <h4>{this.state.mintPriceLLG} BNB</h4>\n            </div>\n            <button\n              id=\"mintBtnLLG\"\n              style={{ fontSize: \"0.9rem\", letterSpacing: \"0.14rem\" }}\n              type=\"submit\"\n              className=\"btn mt-4 btn-block btn-outline-primary w-50\"\n            >\n              Buy LLG Token\n            </button>\n            <div className=\"mt-4\">\n            </div>\n          </div>\n        </form> */}\n\n        <form onSubmit={this.callMintMyNFTFromApp} className=\"pt-4 mt-1\">\n          <div className=\"col-md-6\">\n            <div>\n              <label htmlFor=\"price\">Mint Shroomie for</label>\n              <h4>{this.state.mintPrice} BNB</h4>\n            </div>\n            <button\n              id=\"mintBtn\"\n              style={{ fontSize: \"0.9rem\", letterSpacing: \"0.14rem\" }}\n              type=\"submit\"\n              className=\"btn mt-4 btn-block btn-outline-primary w-50\"\n            >\n              Mint My Shroomie\n            </button>\n            <div className=\"mt-4\">\n            </div>\n          </div>\n        </form>\n\n        <form onSubmit={this.callMintMyNFTFromAppHero} className=\"pt-4 mt-1\">\n          <div className=\"col-md-6\">\n            <div>\n              <label htmlFor=\"price\">Mint Hero for</label>\n              <h4>{this.state.mintPriceHero} LLG Tokens</h4>\n            </div>\n            <button\n              id=\"mintBtnHero\"\n              style={{ fontSize: \"0.9rem\", letterSpacing: \"0.14rem\" }}\n              type=\"submit\"\n              className=\"btn mt-4 btn-block btn-outline-primary w-50\"\n            >\n              Mint My Hero\n            </button>\n            <div className=\"mt-4\">\n            </div>\n          </div>\n        </form>\n      </div>\n\n    );\n  }\n}\n\nexport default FormAndPreview;\n","import React from \"react\";\n\nconst ShroomYNFTImage = ({ tokenId, shroomieSContract }) => {\n\n  const shroomy_card = {\n    display: 'flex',\n    justifyContent: 'center',\n    border: `2px solid black`,\n  };\n  const shroomy_image = {\n    width: \"200px\",\n    height: \"200px\",\n  };\n\n  const [image, setImage] = React.useState('');\n\n  const getImageData = async () => {\n    let image = await shroomieSContract.methods\n      .getTokenMetaData(tokenId)\n      .call();\n    setImage(image);\n    // console.log(image);\n  };\n\n  React.useEffect(() => {\n    getImageData();\n  }, []);\n\n  return (\n    <div>\n      {\n        (image.substring(image.lastIndexOf('.') + 1, image.length) === 'png') ?\n          <div style={shroomy_card}>\n            <img src={image} style={shroomy_image} alt='graphic-nft'/>\n          </div>\n          :\n          <div style={shroomy_card}>\n            <video src={image} type=\"video/mp4\" autoPlay loop style={shroomy_image} />\n          </div>\n      }\n    </div>\n  );\n};\n\nexport default ShroomYNFTImage;\n","import React, { Component } from \"react\";\n\nclass ShroomYNFTDetails extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div key={this.props.shroomy.tokenId.toNumber()} className=\"mt-4\">\n        <p>\n          <span className=\"font-weight-bold\">Token Id</span> :{\" \"}\n          {this.props.shroomy.tokenId.toNumber()}\n        </p>\n        <p>\n          <span className=\"font-weight-bold\">Name</span> :{\" \"}\n          {this.props.shroomy.tokenName}\n        </p>\n        <p>\n          <span className=\"font-weight-bold\">Minted By</span> :{\" \"}\n          {this.props.shroomy.mintedBy.substr(0, 5) +\n            \"...\" +\n            this.props.shroomy.mintedBy.slice(\n              this.props.shroomy.mintedBy.length - 5\n            )}\n        </p>\n        <p>\n          <span className=\"font-weight-bold\">Owned By</span> :{\" \"}\n          {this.props.shroomy.currentOwner.substr(0, 5) +\n            \"...\" +\n            this.props.shroomy.currentOwner.slice(\n              this.props.shroomy.currentOwner.length - 5\n            )}\n        </p>\n        <p>\n          <span className=\"font-weight-bold\">Previous Owner</span> :{\" \"}\n          {this.props.shroomy.previousOwner.substr(0, 5) +\n            \"...\" +\n            this.props.shroomy.previousOwner.slice(\n              this.props.shroomy.previousOwner.length - 5\n            )}\n        </p>\n        <p>\n          <span className=\"font-weight-bold\">Price</span> :{\" \"}\n          {window.web3.utils.fromWei(\n            this.props.shroomy.price.toString(),\n            \"ether\"\n          )}{\" \"}\n          BNB\n        </p>\n        <p>\n          <span className=\"font-weight-bold\">No. of Transfers</span> :{\" \"}\n          {this.props.shroomy.numberOfTransfers.toNumber()}\n        </p>\n        <div>\n          {this.props.accountAddress !== this.props.shroomy.currentOwner ? (\n            this.props.shroomy.forSale ? (\n              <button\n                className=\"btn btn-outline-primary mt-3 w-100\"\n                value={this.props.shroomy.price}\n                style={{ fontSize: \"0.7rem\", letterSpacing: \"0.10rem\" }}\n                onClick={(e) =>\n                  this.props.buyShroomY(\n                    this.props.shroomy.tokenId.toNumber(),\n                    e.target.value\n                  )\n                }\n              >\n                Buy For{\" \"}\n                {window.web3.utils.fromWei(\n                  this.props.shroomy.price.toString(),\n                  \"Ether\"\n                )}{\" \"}\n                BNB\n              </button>\n            ) : (\n              <>\n                <button\n                  disabled\n                  style={{ fontSize: \"0.7rem\", letterSpacing: \"0.10rem\" }}\n                  className=\"btn btn-outline-primary mt-3 w-100\"\n                >\n                  Buy For{\" \"}\n                  {window.web3.utils.fromWei(\n                    this.props.shroomy.price.toString(),\n                    \"Ether\"\n                  )}{\" \"}\n                  BNB\n                </button>\n                <p className=\"mt-2\">Currently not for sale!</p>\n              </>\n            )\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShroomYNFTDetails;\n","import React from \"react\";\nimport loadingGIF from \"./loading.gif\";\n\nconst Loading = () => {\n  return <img src={loadingGIF} alt=\"Loading..\" className=\"d-block m-auto\" />;\n};\n\nexport default Loading;\n","import React, { useState, useEffect } from \"react\";\nimport ShroomYNFTImage from \"../ShroomYNFTImage/ShroomYNFTImage\";\nimport ShroomYNFTDetails from \"../ShroomYNFTDetails/ShroomYNFTDetails\";\nimport Loading from \"../Loading/Loading\";\n\nconst AllShroomieS = ({\n  shroomieSContract,\n  shroomieS,\n  accountAddress,\n  totalTokensMinted,\n  buyShroomY,\n}) => {\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (shroomieS.length !== 0) {\n      if (shroomieS[0].metaData !== undefined) {\n        setLoading(loading);\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [shroomieS]);\n\n  return (\n    <div>\n      <div className=\"card mt-1\">\n        <div className=\"card-body align-items-center d-flex justify-content-center\">\n          <h5>\n            Total No. of Shroomie's Minted On The Platform :{\" \"}\n            {totalTokensMinted}\n          </h5>\n        </div>\n      </div>\n      <div className=\"d-flex flex-wrap mb-1\">\n        {shroomieS.map((shroomy) => {\n          return (\n            <div\n              key={shroomy.tokenId.toNumber()}\n              className=\"w-25 p-1 mt-1 border\"\n            >\n              {!loading ? (\n                <ShroomYNFTImage\n                tokenId={shroomy.tokenId.toNumber()}\n                shroomieSContract={shroomieSContract}\n                />\n              ) : (\n                <Loading />\n              )}\n              <ShroomYNFTDetails\n                shroomy={shroomy}\n                accountAddress={accountAddress}\n                buyShroomY={buyShroomY}\n              />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default AllShroomieS;\n","import React from \"react\";\n\nconst HeroNFTImage = ({ tokenURI }) => {\n\n  const shroomy_card = {\n    display: 'flex',\n    justifyContent: 'center',\n    border: `2px solid black`,\n  };\n  const shroomy_image = {\n    width: \"200px\",\n    height: \"200px\",\n  };\n\n  const [image, setImage] = React.useState('');\n\n  const getImageData = async () => {\n    setImage(tokenURI);\n    // console.log(image);\n  };\n\n  React.useEffect(() => {\n    getImageData();\n  }, []);\n\n  return (\n    <div>\n      {\n        (image.substring(image.lastIndexOf('.') + 1, image.length) === 'png') ?\n          <div style={shroomy_card}>\n            <img src={image} style={shroomy_image} alt='graphic-nft'/>\n          </div>\n          :\n          <div style={shroomy_card}>\n            <video src={image} type=\"video/mp4\" autoPlay loop muted style={shroomy_image} />\n          </div>\n      }\n    </div>\n  );\n};\n\nexport default HeroNFTImage;\n","import React, { Component } from \"react\";\n\nclass ShroomYNFTDetails extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      noHeroBuy: 0,\n    };\n  }\n\n  render() {\n    return (\n      <div key={this.props.hero.tokenId} className=\"mt-4\">\n        <p>\n          <span className=\"font-weight-bold\">Token Id</span> :{\" \"}\n          {this.props.hero.tokenId}\n        </p>\n        <p>\n          <span className=\"font-weight-bold\">Name</span> :{\" \"}\n          {this.props.hero.tokenName}\n        </p>\n        <p>\n          <span className=\"font-weight-bold\">Owner</span> :{\" \"}\n          {this.props.hero.userAddress.substr(0, 5) +\n            \"...\" +\n            this.props.hero.userAddress.slice(\n              this.props.hero.userAddress.length - 5\n            )}\n        </p>\n        <p>\n          <span className=\"font-weight-bold\">No. of heroes available</span> :{\" \"}\n          {this.props.hero.noInSale}\n        </p>\n        <p>\n          <span className=\"font-weight-bold\">Price</span> :{\" \"}\n          {this.props.hero.salePrice} LLG Tokens\n        </p>\n        <div>\n          {this.props.accountAddress !== this.props.hero.userAddress ? (\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (this.state.noHeroBuy <= 0) {\n                  alert(\"No. of Heroes cannot be negative or zero\");\n                } else {\n                  if (this.state.noHeroBuy > this.props.hero.noInSale) {\n                    alert(this.state.noHeroBuy + \" Heroes not available\");\n                  } else {\n                    this.props.buyHero(this.props.hero.tokenId, this.state.noHeroBuy, this.props.hero.userAddress, this.props.hero.salePrice);\n                  }\n                }\n              }}\n            >\n              <div className=\"form-group mt-4 \">\n                <label htmlFor=\"newShroomYPrice\">\n                  <span className=\"font-weight-bold\">No of Heroes</span> :\n                </label>{\" \"}\n                <input\n                  required\n                  type=\"number\"\n                  name=\"newShroomYPrice\"\n                  id=\"newShroomYPrice\"\n                  value={this.state.noHeroBuy}\n                  className=\"form-control w-100\"\n                  placeholder=\"Enter new price\"\n                  onChange={(e) =>\n                    this.setState({\n                      noHeroBuy: e.target.value,\n                    })\n                  }\n                />\n              </div>\n              <button\n                type=\"submit\"\n                style={{ fontSize: \"0.7rem\", letterSpacing: \"0.10rem\" }}\n                className=\"btn btn-outline-info mt-0 w-80\"\n              >\n                Buy Hero\n              </button>\n            </form>\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShroomYNFTDetails;\n","import React, { useState, useEffect } from \"react\";\nimport HeroNFTImage from \"../HeroNFTImage/HeroNFTImage\";\nimport HeroNFTDetails from \"../HeroNFTDetails/HeroNFTDetails\";\nimport Loading from \"../Loading/Loading\";\nimport { Link } from \"react-router-dom\";\n\nconst AllHeros = ({\n  accountAddress,\n  heroesContract,\n  totalInMarketplace,\n  marketplaceData,\n  changeTokenPriceHero,\n  toggleForSaleHero,\n  buyHero,\n}) => {\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <div>\n      <div className=\"card mt-1\">\n        <div className=\"card-body align-items-center d-flex justify-content-center\">\n          <h5>\n            Total No. of Heroes Available On The Platform :{\" \"}\n            {totalInMarketplace}\n          </h5>\n        </div>\n      </div>\n      <div className=\"d-flex flex-wrap mb-1\">\n        {marketplaceData.map((hero, i) => {\n          return (\n            <div\n              key={i}\n              className=\"w-25 p-1 mt-1 border\"\n            >\n              <Link to={{\n                pathname: `/hero-detail/${hero.tokenName}`\n              }}>\n                {!loading ? (\n                  <HeroNFTImage\n                    tokenURI={hero.tokenURI}\n                  />\n                ) : (\n                  <Loading />\n                )}\n              </Link>\n              <HeroNFTDetails\n                hero={hero}\n                accountAddress={accountAddress}\n                heroesContract={heroesContract}\n                buyHero={buyHero}\n              />\n\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default AllHeros;\n","import React from \"react\";\n\nconst AccountDetails = ({ accountAddress, accountBalance }) => {\n  return (\n    <div>\n      <div className=\"jumbotron\">\n        <h1 className=\"display-5\">Shroomie's NFT Marketplace</h1>\n        <p className=\"lead\">\n          Shroomie's marketplace where you can mint, buy or sell{\" \"}\n          <i>Shroomies</i> and manage them.\n        </p>\n        <hr className=\"my-4\" />\n        <p className=\"lead\">Account address :</p>\n        <h4>{accountAddress}</h4>\n        <p className=\"lead\">Account balance :</p>\n        <h4>{accountBalance} BNB</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default AccountDetails;\n","import React from \"react\";\n\nconst ContractNotDeployed = () => {\n  return (\n    <div className=\"jumbotron\">\n      <h3>Shroomie Platform Not Available To This Network.</h3>\n      <hr className=\"my-4\" />\n      <p className=\"lead\">\n        Please Connect Metamask to Binance Smart Chain Testnet.\n      </p>\n    </div>\n  );\n};\n\nexport default ContractNotDeployed;\n","import React from \"react\";\nimport metamaskIcon from \"./metamask.svg\";\n\nconst ConnectToMetamask = ({ connectToMetamask }) => {\n  return (\n    <div className=\"jumbotron\">\n      <h1 className=\"display-5\">\n        Shroomy NFT Marketplace\n      </h1>\n      <p className=\"lead\">\n        This is an Shroomy marketplace where you can mint your{\" \"}\n        <i>Shroomy</i> and manage them.\n      </p>\n      <hr className=\"my-4\" />\n      <button\n        onClick={connectToMetamask}\n        className=\"btn btn-primary d-flex align-items-center\"\n        style={{ fontSize: \"0.9rem\", letterSpacing: \"0.14rem\" }}\n      >\n        Connect Metamask{\" \"}\n        <img\n          src={metamaskIcon}\n          alt=\"metamask-icon\"\n          style={{ width: \"2rem\", marginLeft: \"0.5rem\" }}\n        />\n      </button>\n    </div>\n  );\n};\n\nexport default ConnectToMetamask;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navbar = ({state}) => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n      <div className=\"container m-0\">\n      \n        <button\n          className=\"navbar-toggler\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarNav\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div id=\"navbarNav\" className=\"collapse navbar-collapse\">\n          <ul\n            style={{ fontSize: \"0.8rem\", letterSpacing: \"0.15rem\" }}\n            className=\"navbar-nav ml-auto\"\n          >\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/mint\" className=\"nav-link\">\n                Mint Tokens\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/marketplace\" className=\"nav-link\">\n                Shroomie Marketplace\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/marketplace-hero\" className=\"nav-link\">\n                Hero Marketplace\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/my-tokens\" className=\"nav-link\">\n                My Shroomies\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/my-hero\" className=\"nav-link\">\n                My Heroes\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/queries\" className=\"nav-link\">\n                Queries\n              </Link>\n            </li>\n            {(state.contractOwner === state.accountAddress) ?\n              <li className=\"nav-item\">\n                <Link to=\"/change-price\" className=\"nav-link\">\n                  Mint Prices\n                </Link>\n              </li>\n              : null}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst MyShroomYNFTDetails = (props) => {\n  const {\n    tokenId,\n    tokenName,\n    price,\n    mintedBy,\n    previousOwner,\n    numberOfTransfers,\n  } = props.shroomy;\n\n  const [state, setState] = React.useState({\n    newShroomYPrice: \"\",\n    receiver: \"\"\n  });\n\n  const callChangeTokenPriceFromApp = (tokenId, newPrice) => {\n    props.changeTokenPrice(tokenId, newPrice);\n  };\n\n  const callGift = (tokenId, receiver) => {\n    props.giftShroomY(tokenId, receiver);\n  };\n\n  return (\n    <div key={tokenId.toNumber()} className=\"mt-4\">\n      <p>\n        <span className=\"font-weight-bold\">Token Id</span> :{\" \"}\n        {tokenId.toNumber()}\n      </p>\n      <p>\n        <span className=\"font-weight-bold\">Name</span> : {tokenName}\n      </p>\n      <p>\n        <span className=\"font-weight-bold\">Price</span> :{\" \"}\n        {window.web3.utils.fromWei(price.toString(), \"Ether\")} BNB\n      </p>\n      <p>\n        <span className=\"font-weight-bold\">No. of Transfers</span> :{\" \"}\n        {numberOfTransfers.toNumber()}\n      </p>\n      {props.accountAddress === mintedBy &&\n      props.accountAddress !== previousOwner ? (\n        <div className=\"alert alert-success w-100 text-center m-auto\">\n          Minted\n        </div>\n      ) : (\n        <div className=\"alert alert-info w-100 text-center m-auto\">Bought</div>\n      )}\n              <div>\n          {props.accountAddress === props.shroomy.currentOwner ? (\n            <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                callChangeTokenPriceFromApp(\n                  props.shroomy.tokenId.toNumber(),\n                  state.newShroomYPrice\n                );\n              }}\n            >\n              <div className=\"form-group mt-4 \">\n                <label htmlFor=\"newShroomYPrice\">\n                  <span className=\"font-weight-bold\">Change Token Price</span> :\n                </label>{\" \"}\n                <input\n                  required\n                  type=\"number\"\n                  name=\"newShroomYPrice\"\n                  id=\"newShroomYPrice\"\n                  value={state.newShroomYPrice}\n                  className=\"form-control w-100\"\n                  placeholder=\"Enter new price\"\n                  onChange={(e) =>\n                    setState({\n                      ...state,\n                      newShroomYPrice: e.target.value,\n                    })\n                  }\n                />\n              </div>\n              <button\n                type=\"submit\"\n                style={{ fontSize: \"0.7rem\", letterSpacing: \"0.10rem\" }}\n                className=\"btn btn-outline-info mt-0 w-100\"\n              >\n                change price\n              </button>\n            </form>\n          ) : null}\n        </div>\n        <div>\n          {props.accountAddress === props.shroomy.currentOwner ? (\n            props.shroomy.forSale ? (\n              <button\n                className=\"btn btn-outline-danger mt-4 w-100\"\n                style={{ fontSize: \"0.7rem\", letterSpacing: \"0.10rem\" }}\n                onClick={() =>\n                  props.toggleForSale(\n                    props.shroomy.tokenId.toNumber()\n                  )\n                }\n              >\n                Remove from sale\n              </button>\n            ) : (\n              <button\n                className=\"btn btn-outline-success mt-4 w-100\"\n                style={{ fontSize: \"0.7rem\", letterSpacing: \"0.10rem\" }}\n                onClick={() =>\n                  props.toggleForSale(\n                    props.shroomy.tokenId.toNumber()\n                  )\n                }\n              >\n                Keep for sale\n              </button>\n            )\n          ) : null}\n        </div>\n\n        <div>\n        <form\n              onSubmit={(e) => {\n                e.preventDefault();\n                callGift(\n                  props.shroomy.tokenId.toNumber(),\n                  state.receiver\n                );\n              }}\n            >\n              <div className=\"form-group mt-4 \">\n                <label htmlFor=\"receiver\">\n                  <span className=\"font-weight-bold\">Transfer Shroomie To</span> :\n                </label>{\" \"}\n                <input\n                  required\n                  name=\"receiver\"\n                  id=\"receiver\"\n                  value={state.receiver}\n                  className=\"form-control w-100\"\n                  placeholder=\"Enter Receiver Address\"\n                  onChange={(e) =>\n                    setState({\n                      ...state,\n                      receiver: e.target.value,\n                    })\n                  }\n                />\n              </div>\n              <button\n                type=\"submit\"\n                style={{ fontSize: \"0.7rem\", letterSpacing: \"0.10rem\" }}\n                className=\"btn btn-outline-info mt-0 w-100\"\n              >\n                Send Shroomie\n              </button>\n            </form>\n        </div>\n\n    </div>\n  );\n};\n\nexport default MyShroomYNFTDetails;\n","import React, { useState, useEffect } from \"react\";\nimport ShroomYNFTImage from \"../ShroomYNFTImage/ShroomYNFTImage\";\nimport MyShroomYNFTDetails from \"../MyShroomYNFTDetails/MyShroomYNFTDetails\";\nimport Loading from \"../Loading/Loading\";\n\nconst MyShroomieS = ({\n  shroomieSContract,\n  accountAddress,\n  shroomieS,\n  totalTokensOwnedByAccount,\n  changeTokenPrice,\n  toggleForSale,\n  giftShroomY\n}) => {\n  const [loading, setLoading] = useState(false);\n  const [myShroomieS, setMyShroomieS] = useState([]);\n\n  useEffect(() => {\n    if (shroomieS.length !== 0) {\n      if (shroomieS[0].metaData !== undefined) {\n        setLoading(loading);\n      } else {\n        setLoading(false);\n      }\n    }\n    const my_shroomies = shroomieS.filter(\n      (shroomy) => shroomy.currentOwner === accountAddress\n    );\n    setMyShroomieS(my_shroomies);\n  }, [shroomieS]);\n\n  return (\n    <div>\n      <div className=\"card mt-1\">\n        <div className=\"card-body align-items-center d-flex justify-content-center\">\n          <h5>\n            Total No. of Shroomie's You Own : {totalTokensOwnedByAccount}\n          </h5>\n        </div>\n      </div>\n      <div className=\"d-flex flex-wrap mb-1 border\">\n        {myShroomieS.map((shroomy) => {\n          return (\n            <div\n              key={shroomy.tokenId.toNumber()}\n              className=\"w-25 p-1 mt-1 border\" \n            >\n                {!loading ? (\n                  <ShroomYNFTImage\n                    tokenId={shroomy.tokenId.toNumber()}\n                    shroomieSContract={shroomieSContract}\n                  />\n                ) : (\n                  <Loading />\n                )}\n                <MyShroomYNFTDetails\n                  shroomy={shroomy}\n                  accountAddress={accountAddress}\n                  changeTokenPrice={changeTokenPrice}\n                  toggleForSale={toggleForSale}\n                  giftShroomY={giftShroomY}\n                />\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MyShroomieS;\n","import React from \"react\";\n\nconst MyHeroNFTDetails = (props) => {\n  const {\n    tokenId,\n    tokenName,\n    tokenURI,\n    balance,\n    sales,\n    stakes,\n    salePrice\n  } = props.hero;\n\n  const accountAddress = props.accountAddress;\n  const heroesContract = props.heroesContract;\n\n  const [newPrice, setNewPrice] = React.useState(0);\n  const [onSale, setOnSale] = React.useState(0);\n  const [onStake, setOnStake] = React.useState(0);\n  const [toGift, setToGift] = React.useState(0);\n  const [receiver, setReceiver] = React.useState('');\n\n  React.useEffect(() => {\n    setNewPrice(salePrice);\n    setOnSale(sales);\n    setOnStake(stakes);\n    props.setStakeTimer();\n  }, []);\n\n  return (\n    <div key={tokenId} className=\"mt-4\">\n      <p>\n        <span className=\"font-weight-bold\">Token Id</span> :{\" \"}\n        {tokenId}\n      </p>\n      <p>\n        <span className=\"font-weight-bold\">Name</span> : {tokenName}\n      </p>\n      <p>\n        <span className=\"font-weight-bold\">Price</span> :{\" \"}\n        {salePrice} LLG Tokens\n      </p>\n      <p>\n        <span className=\"font-weight-bold\">Total Heroes Owned</span> :{\" \"}\n        {balance}\n      </p>\n      <p>\n        <span className=\"font-weight-bold\">Total Heroes up for Sale</span> :{\" \"}\n        {sales}\n      </p>\n      <p>\n        <span className=\"font-weight-bold\">Total Heroes on Stake</span> :{\" \"}\n        {stakes}\n      </p>\n\n\n      {(true) ? (\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            if (newPrice <= 0) {\n              alert(\"Price cannot be negative or zero\");\n            } else {\n              props.changeTokenPriceHero(tokenId, newPrice);\n            }\n          }}\n        >\n          <div className=\"form-group mt-4 \">\n            <label htmlFor=\"newShroomYPrice\">\n              <span className=\"font-weight-bold\">Change Token Price</span> :\n            </label>{\" \"}\n            <input\n              required\n              type=\"number\"\n              name=\"newShroomYPrice\"\n              id=\"newShroomYPrice\"\n              value={newPrice}\n              className=\"form-control w-100\"\n              placeholder=\"Enter new price\"\n              onChange={(e) =>\n                setNewPrice(e.target.value)\n              }\n            />\n          </div>\n          <button\n            type=\"submit\"\n            style={{ fontSize: \"0.7rem\", letterSpacing: \"0.10rem\" }}\n            className=\"btn btn-outline-info mt-0 w-80\"\n          >\n            Change Price\n          </button>\n        </form>\n      ) : null}\n\n\n      {(balance - stakes > 0) ? (\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            if (onSale < 0) {\n              alert(\"Value cannot be negative\");\n            } else {\n              if (sales > onSale) {\n                props.toggleSale(tokenId, sales - onSale, false);\n              } else if (sales < onSale) {\n                props.toggleSale(tokenId, onSale - sales, true);\n              }\n            }\n          }}\n        >\n          <div className=\"form-group mt-4 \">\n            <label htmlFor=\"newShroomYPrice\">\n              <span className=\"font-weight-bold\">Change No. of tokens on Sale</span> :\n            </label>{\" \"}\n            <input\n              required\n              type=\"number\"\n              name=\"newShroomYPrice\"\n              id=\"newShroomYPrice\"\n              value={onSale}\n              className=\"form-control w-100\"\n              placeholder=\"No. of tokens\"\n              onChange={(e) =>\n                setOnSale(e.target.value)\n              }\n            />\n          </div>\n          <button\n            type=\"submit\"\n            style={{ fontSize: \"0.7rem\", letterSpacing: \"0.10rem\" }}\n            className=\"btn btn-outline-info mt-0 w-80\"\n          >\n            Change No. of tokens on Sale\n          </button>\n        </form>\n      ) : null}\n\n\n\n      {(balance - sales > 0) ? (\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            if (onStake < 0) {\n              alert(\"Stake value cannot be negative\");\n            } else {\n              if (stakes > onStake) {\n                props.toggleStake(tokenId, tokenName, stakes - onStake, false);\n              } else if (stakes < onStake) {\n                props.toggleStake(tokenId, tokenName, onStake - stakes, true);\n              }\n            }\n          }}\n        >\n          <div className=\"form-group mt-4 \">\n            <label htmlFor=\"newShroomYPrice\">\n              <span className=\"font-weight-bold\">Change No. of tokens on Stake</span> :\n            </label>{\" \"}\n            <input\n              required\n              type=\"number\"\n              name=\"newShroomYPrice\"\n              id=\"newShroomYPrice\"\n              value={onStake}\n              className=\"form-control w-100\"\n              placeholder=\"No. of tokens\"\n              onChange={(e) =>\n                setOnStake(e.target.value)\n              }\n            />\n          </div>\n          <button\n            id=\"stakeBtn\"\n            type=\"submit\"\n            style={{ fontSize: \"0.7rem\", letterSpacing: \"0.10rem\" }}\n            className=\"btn btn-outline-info mt-0 w-80\"\n          >\n            Change No. of tokens on Stake\n          </button>\n        </form>\n      ) : null}\n\n      {(sales > 0) ? (\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            if (toGift <= 0) {\n              alert(\"No. of Heroes cannot be negative or zero\");\n            } else {\n              if (toGift > sales) {\n                alert(toGift + \" Heroes not available\");\n              } else {\n                props.giftHero(tokenId, toGift, receiver);\n              }\n            }\n          }}\n        >\n          <div className=\"form-group mt-4 \">\n            <label htmlFor=\"newShroomYPrice\">\n              <span className=\"font-weight-bold\">No of Heroes</span> :\n            </label>{\" \"}\n            <input\n              required\n              type=\"number\"\n              name=\"newShroomYPrice\"\n              id=\"newShroomYPrice\"\n              value={toGift}\n              className=\"form-control w-100\"\n              placeholder=\"Enter new price\"\n              onChange={(e) =>{\n                setToGift(e.target.value)\n              }}\n            />\n            <label htmlFor=\"newShroomYPrice\">\n              <span className=\"font-weight-bold\">Receiver</span> :\n            </label>{\" \"}\n            <input\n              required\n              name=\"newShroomYPrice\"\n              id=\"newShroomYPrice\"\n              value={receiver}\n              className=\"form-control w-100\"\n              placeholder=\"Enter Receiver Address\"\n              onChange={(e) =>{\n                setReceiver(e.target.value)\n              }}\n            />\n          </div>\n          <button\n            type=\"submit\"\n            style={{ fontSize: \"0.7rem\", letterSpacing: \"0.10rem\" }}\n            className=\"btn btn-outline-info mt-0 w-80\"\n          >\n            Send Hero\n          </button>\n        </form>\n      ) : null}\n\n    </div>\n  );\n};\n\nexport default MyHeroNFTDetails;\n","import React, { useState, useEffect } from \"react\";\nimport HeroNFTImage from \"../HeroNFTImage/HeroNFTImage\";\nimport MyHeroNFTDetails from \"../MyHeroNFTDetails/MyHeroNFTDetails\";\nimport Loading from \"../Loading/Loading\";\nimport { Link } from \"react-router-dom\";\n\nconst MyHeros = ({\n  accountAddress,\n  heroesContract,\n  totalMyHero,\n  myHeroData,\n  toggleSale,\n  toggleStake,\n  changeTokenPriceHero,\n  setStakeTimer,\n  rewardEarned,\n  giftHero\n}) => {\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <div>\n      <div className=\"card mt-1\">\n        <div className=\"card-body align-items-center d-flex justify-content-center\">\n          <h5>\n            Total No. of Heroes You Own : {totalMyHero}\n          </h5>\n        </div>\n      </div>\n      <div className=\"card mt-1\">\n        <div className=\"card-body align-items-center d-flex justify-content-center\">\n          <h5>\n            Total Reward Earned : {window.web3.utils.fromWei(rewardEarned.toString(), \"Ether\")}\n          </h5>\n        </div>\n      </div>\n      <div className=\"d-flex flex-wrap mb-1 border\">\n        {myHeroData.map((hero, i) => {\n          return (\n            <div\n              key={i}\n              className=\"w-25 p-1 mt-1 border\"\n            >\n              <Link to={{\n                pathname: `/hero-detail/${hero.tokenName}`\n              }}>\n                {!loading ? (\n                  <HeroNFTImage\n                    tokenURI={hero.tokenURI}\n                  />\n                ) : (\n                  <Loading />\n                )}\n              </Link>\n              <MyHeroNFTDetails\n                hero={hero}\n                accountAddress={accountAddress}\n                heroesContract={heroesContract}\n                toggleSale={toggleSale}\n                toggleStake={toggleStake}\n                changeTokenPriceHero={changeTokenPriceHero}\n                setStakeTimer={setStakeTimer}\n                giftHero={giftHero}\n              />\n\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default MyHeros;\n","import React, { useState } from \"react\";\n\nconst Queries = (props) => {\n  const [tokenIdForOwner, setTokenIdForOwner] = useState(\"\");\n  const [tokenOwner, setTokenOwner] = useState(\"\");\n  const [tokenIdForOwnerNotFound, setTokenIdForOwnerNotFound] = useState(false);\n\n  const [tokenIdForMetadata, setTokenIdForMetadata] = useState(\"\");\n  const [tokenMetadata, setTokenMetadata] = useState(\"\");\n  const [tokenMetadataLink, setTokenMetadataLink] = useState(\"\");\n  const [tokenIdForMetadataNotFound, setTokenIdForMetadataNotFound] = useState(\n    false\n  );\n\n  const getTokenOwner = async (e) => {\n    e.preventDefault();\n    try {\n      const owner = await props.shroomieSContract.methods\n        .getTokenOwner(tokenIdForOwner)\n        .call();\n      setTokenOwner(owner);\n      setTimeout(() => {\n        setTokenOwner(\"\");\n        setTokenIdForOwner(\"\");\n      }, 5000);\n    } catch (e) {\n      setTokenIdForOwnerNotFound(true);\n      setTokenIdForOwner(\"\");\n    }\n  };\n\n  const getTokenMetadata = async (e) => {\n    e.preventDefault();\n    try {\n      const metadata = await props.shroomieSContract.methods\n        .getTokenMetaData(tokenIdForMetadata)\n        .call();\n      setTokenMetadata(\n        metadata\n      );\n      setTokenMetadataLink(metadata);\n      setTimeout(() => {\n        setTokenMetadata(\"\");\n        setTokenIdForMetadata(\"\");\n      }, 5000);\n    } catch (e) {\n      setTokenIdForMetadataNotFound(true);\n      setTokenIdForMetadata(\"\");\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"card mt-1\">\n        <div className=\"card-body align-items-center d-flex justify-content-center\">\n          <h5>Queries</h5>\n        </div>\n      </div>\n      <div className=\"p-4 mt-1 border\">\n        <div className=\"row\">\n          <div className=\"col-md-5\">\n            <h5>Get Shroomie's Owner</h5>\n            <form onSubmit={getTokenOwner}>\n              <div className=\"form-group\">\n                <input\n                  required\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={tokenIdForOwner}\n                  placeholder=\"Enter Token Id\"\n                  onChange={(e) => setTokenIdForOwner(e.target.value)}\n                />\n              </div>\n              <button className=\"mt-3 btn btn-outline-primary\" type=\"submit\">\n                Get Owner\n              </button>\n              {tokenIdForOwnerNotFound ? (\n                <div className=\"alert alert-danger alert-dissmissible mt-4\">\n                  <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\n                    <span>&times;</span>\n                  </button>\n                  <strong>Non-Existent Token Id</strong>\n                </div>\n              ) : null}\n            </form>\n            <p className=\"mt-4\">{tokenOwner}</p>\n          </div>\n          <div className=\"col-md-7\">\n            <h5>Get Shroomie's Info</h5>\n            <form onSubmit={getTokenMetadata}>\n              <div className=\"form-group\">\n                <input\n                  required\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={tokenIdForMetadata}\n                  placeholder=\"Enter Token Id\"\n                  onChange={(e) => setTokenIdForMetadata(e.target.value)}\n                />\n              </div>\n              <button className=\"mt-3 btn btn-outline-primary\" type=\"submit\">\n                Get Graphic\n              </button>\n              {tokenIdForMetadataNotFound ? (\n                <div className=\"alert alert-danger alert-dissmissible mt-4\">\n                  <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\n                    <span>&times;</span>\n                  </button>\n                  <strong>Non-Existent Token Id</strong>\n                </div>\n              ) : null}\n            </form>\n            <p className=\"mt-4 text-wrap\">\n              <a\n                href={`${tokenMetadataLink}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {tokenMetadata}\n              </a>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Queries;\n","import React, { useState } from \"react\";\n\nconst ChangeMintPrice = (props) => {\n  const [newPrice, setnewPrice] = useState(window.web3.utils.fromWei(props.mintPrice.toString(), \"Ether\"));\n  const [priceUpdatedError, setpriceUpdatedError] = useState(false);\n\n  const [newPriceHero, setnewPriceHero] = useState(\n    window.web3.utils.fromWei(props.mintPriceHero.toString(), \"Ether\")\n    );\n  const [priceUpdatedErrorHero, setpriceUpdatedErrorHero] = useState(false);\n\n  const changePrice = async (e) => {\n    e.preventDefault();\n    let res = await props.shroomieSContract.methods\n      .setMintPrice(window.web3.utils.toWei(newPrice.toString(), \"Ether\"))\n      .send({ from: props.accountAddress });\n\n    setpriceUpdatedError(!res);\n    setnewPrice(window.web3.utils.fromWei(props.mintPrice.toString(), \"Ether\"));\n    window.location.reload();\n  };\n\n  const changePriceHero = async (e) => {\n    e.preventDefault();\n    let res = await props.heroesContract.methods\n      .setMintPrice(window.web3.utils.toWei(newPriceHero.toString(), \"Ether\"))\n      .send({ from: props.accountAddress });\n\n    setpriceUpdatedErrorHero(!res);\n    setnewPriceHero(window.web3.utils.fromWei(props.mintPriceHero.toString(), \"Ether\"));\n    window.location.reload();\n  };\n\n  return (\n    <div>\n      <div className=\"card mt-1\">\n        <div className=\"card-body align-items-center d-flex justify-content-center\">\n          <h5>Change Mint Price Shroomie</h5>\n        </div>\n      </div>\n      <div className=\"p-4 mt-1 border\">\n        <div className=\"row\">\n          <div className=\"col-md-5\">\n            <h5>New Price</h5>\n            <form onSubmit={changePrice}>\n              <div className=\"form-group\">\n                <input\n                  required\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={newPrice}\n                  placeholder=\"New Price\"\n                  onChange={(e) => setnewPrice(e.target.value)}\n                />\n              </div>\n              <button className=\"mt-3 btn btn-outline-primary\" type=\"submit\">\n                Change Mint Price\n              </button>\n              {priceUpdatedError ? (\n                <div className=\"alert alert-danger alert-dissmissible mt-4\">\n                  <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\n                    <span>&times;</span>\n                  </button>\n                  <strong>Error Updating The Price</strong>\n                </div>\n              ) : null}\n            </form>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"card mt-1\">\n        <div className=\"card-body align-items-center d-flex justify-content-center\">\n          <h5>Change Mint Price Hero</h5>\n        </div>\n      </div>\n      <div className=\"p-4 mt-1 border\">\n        <div className=\"row\">\n          <div className=\"col-md-5\">\n            <h5>New Price</h5>\n            <form onSubmit={changePriceHero}>\n              <div className=\"form-group\">\n                <input\n                  required\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={newPriceHero}\n                  placeholder=\"New Price\"\n                  onChange={(e) => setnewPriceHero(e.target.value)}\n                />\n              </div>\n              <button className=\"mt-3 btn btn-outline-primary\" type=\"submit\">\n                Change Mint Price\n              </button>\n              {priceUpdatedErrorHero ? (\n                <div className=\"alert alert-danger alert-dissmissible mt-4\">\n                  <button type=\"button\" className=\"close\" data-dismiss=\"alert\">\n                    <span>&times;</span>\n                  </button>\n                  <strong>Error Updating The Price</strong>\n                </div>\n              ) : null}\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChangeMintPrice;\n","import React from \"react\";\nimport herodata from \"../../data/hero-metadata.json\";\nimport Loading from \"../Loading/Loading\";\n\nconst HeroDetail = (props) => {\n\n  const [loading, setLoading] = React.useState(false);\n  const [item, setItem] = React.useState({});\n\n  React.useEffect(() => {\n    let heroName = window.location.href.split('/');\n    heroName = heroName[heroName.length - 1];\n    console.log(heroName)\n\n    setLoading(true);\n    let matchedItem;\n    herodata.forEach((item, i) => {\n      if (item.name === heroName) {\n        matchedItem = item;\n      }\n    });\n    setItem(matchedItem);\n    setLoading(false);\n  }, []);\n\n  const shroomy_card = {\n    display: 'flex',\n    justifyContent: 'center',\n    border: `2px solid black`,\n  };\n  const shroomy_image = {\n    width: \"80%\",\n  };\n\n  return (\n\n    <div>\n      {!loading ? (\n        <div className=\"mt-4 ml-5 mr-5\">\n          <div>\n            <div style={shroomy_card}>\n              <video src={item.image} type=\"video/mp4\" autoPlay loop style={shroomy_image} />\n            </div>\n          </div>\n\n          <p>\n            <span className=\"font-weight-bold\">DNA</span> :{\" \"}\n            {item.dna}\n          </p>\n          <p>\n            <span className=\"font-weight-bold\">Name</span> :{\" \"}\n            {item.name}\n          </p>\n          <p>\n            <span className=\"font-weight-bold\">Rarity</span> :{\" \"}\n            {item.rarity}\n          </p>\n          <p>\n            <span className=\"font-weight-bold\">Description</span> :{\" \"}\n            {item.description}\n          </p>\n\n        </div>\n\n      ) : (\n        <Loading />\n      )}\n    </div>\n  )\n\n};\n\nexport default HeroDetail;\n","import React, { Component } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport Web3 from \"web3\";\n\nimport ShroomieS from \"../abis/ShroomieS.json\";\nimport Heroes from \"../abis/Heroes.json\";\nimport HeroesSale from \"../abis/HeroesSale.json\";\nimport LucidLandsGem from \"../abis/LucidLandsGem.json\";\n\nimport FormAndPreview from \"../components/FormAndPreview/FormAndPreview\";\nimport AllShroomieS from \"./AllShroomieS/AllShroomieS\";\nimport AllHeros from \"./AllHeros/AllHeros\";\nimport AccountDetails from \"./AccountDetails/AccountDetails\";\nimport ContractNotDeployed from \"./ContractNotDeployed/ContractNotDeployed\";\nimport ConnectToMetamask from \"./ConnectMetamask/ConnectToMetamask\";\nimport Loading from \"./Loading/Loading\";\nimport Navbar from \"./Navbar/Navbar\";\nimport MyShroomieS from \"./MyShroomieS/MyShroomieS\";\nimport MyHeros from \"./MyHeros/MyHeros\";\nimport Queries from \"./Queries/Queries\";\nimport ChangeMintPrice from \"./ChangeMintPrice/ChangeMintPrice\";\nimport HeroDetail from \"./HeroDetail/HeroDetail\";\n\nimport data from \"../data/metadata.json\";\nimport herodata from \"../data/hero-metadata.json\";\n\n// const ipfsClient = require(\"ipfs-http-client\");\n// const ipfs = ipfsClient({\n//   host: \"ipfs.infura.io\",\n//   port: 5001,\n//   protocol: \"https\",\n// });\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accountAddress: \"\",\n      accountBalance: \"\",\n      loading: true,\n      metamaskConnected: false,\n      contractDetected: false,\n\n      contractOwner: \"\",\n      mintPrice: 0,\n      mintPriceHero: 0,\n      mintPriceLLG: 0,\n\n      shroomieSContract: null,\n      shroomieSCount: 0,\n      shroomieS: [],\n\n      totalTokensMinted: 0,\n      totalTokensOwnedByAccount: 0,\n\n      heroesContract: null,\n      heroesCount: 0,\n      heroes: [],\n      usersCount: 0,\n      users: [],\n\n      heroesSaleContract: null,\n      heroesSaleContractAddress: '',\n\n      lastMintTime: null,\n      lastMintTimeHero: null,\n\n      totalInMarketplace: 0,\n      marketplaceData: [],\n      totalMyHero: 0,\n      myHeroData: [],\n\n      LLGContractAddress: '0x33A4d5A32BA66B2Bb0F79dF8b0a8577E95E2da6A',\n      LLGContractOwner: '0x1cD8bEE77Ff02261C0A69aD3b64ca75C8456CB01',\n      balanceLLG: 0,\n      LLGContract: null,\n\n      stakeTimeStamp: 0,\n      rewardEarned: 0\n    };\n  }\n\n  componentDidMount = async () => {\n    await this.loadWeb3();\n    await this.loadBlockchainData();\n    await this.setMetaData();\n    await this.setMintBtnTimer();\n    await this.setMintBtnTimerHero();\n    await this.setStakeTimer();\n    await this.setMarketplace();\n    await this.setMyHeroes();\n  };\n\n  setMarketplace = async () => {\n    for (var k = 0; k < this.state.heroes.length; k++) {\n      var item = this.state.heroes[k];\n      var tokenid = item.tokenId.toNumber();\n\n      for (var l = 0; l < this.state.users.length; l++) {\n        var useritem = this.state.users[l];\n        var useraddress = useritem.userAddress;\n        if (useritem.sales[tokenid - 1].toNumber() > 0) {\n          this.setState(\n            {\n              ...this.state,\n              totalInMarketplace: this.state.totalInMarketplace + useritem.sales[tokenid - 1].toNumber()\n            });\n          var data = {\n            tokenId: tokenid,\n            tokenName: item.tokenName,\n            tokenURI: item.tokenURI,\n            userAddress: useraddress,\n            noInSale: useritem.sales[tokenid - 1].toNumber(),\n            salePrice: window.web3.utils.fromWei(useritem.salePrice[tokenid - 1].toString(), \"Ether\"),\n          };\n          // console.log(data)\n          this.setState(\n            {\n              ...this.state,\n              marketplaceData: [...this.state.marketplaceData, data]\n            });\n        }\n      }\n    }\n  };\n\n  setMyHeroes = async () => {\n    let my_data = this.state.users.filter(\n      (user) => user.userAddress === this.state.accountAddress\n    );\n    my_data = my_data[0];\n\n    if (my_data) {\n      for (var k = 0; k < this.state.heroes.length; k++) {\n        var item = this.state.heroes[k];\n        var tokenid = item.tokenId.toNumber();\n        var no = await this.state.heroesContract.methods.balanceOf(this.state.accountAddress, tokenid).call();\n        if (no < 1) {\n          continue;\n        }\n        this.setState(\n          {\n            ...this.state,\n            totalMyHero: this.state.totalMyHero + no.toNumber()\n          });\n        let hero = {\n          tokenId: tokenid,\n          tokenName: item.tokenName,\n          tokenURI: item.tokenURI,\n          balance: no.toNumber(),\n          sales: my_data.sales[tokenid - 1].toNumber(),\n          stakes: my_data.stakes[tokenid - 1].toNumber(),\n          salePrice: window.web3.utils.fromWei(my_data.salePrice[tokenid - 1].toString(), \"Ether\"),\n        };\n        // console.log(hero)\n        this.setState(\n          {\n            ...this.state,\n            myHeroData: [...this.state.myHeroData, hero]\n          });\n      }\n    }\n  };\n\n  setMintBtnTimer = () => {\n    const mintBtn = document.getElementById(\"mintBtn\");\n    if (mintBtn !== undefined && mintBtn !== null) {\n      this.setState({\n        lastMintTime: localStorage.getItem(this.state.accountAddress),\n      });\n      this.state.lastMintTime === undefined || this.state.lastMintTime === null\n        ? (mintBtn.innerHTML = \"Mint My Shroomie\")\n        : this.checkIfCanMint(parseInt(this.state.lastMintTime));\n    }\n  };\n  setMintBtnTimerHero = () => {\n    const mintBtn = document.getElementById(\"mintBtnHero\");\n    if (mintBtn !== undefined && mintBtn !== null) {\n      this.setState({\n        lastMintTimeHero: localStorage.getItem(this.state.accountAddress + \"Hero\"),\n      });\n      this.state.lastMintTimeHero === undefined || this.state.lastMintTimeHero === null\n        ? (mintBtn.innerHTML = \"Mint My Hero\")\n        : this.checkIfCanMintHero(parseInt(this.state.lastMintTimeHero));\n    }\n  };\n\n  checkIfCanMint = (lastMintTime) => {\n    const mintBtn = document.getElementById(\"mintBtn\");\n    const timeGap = 300000; //5min in milliseconds\n    const countDownTime = lastMintTime + timeGap;\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      const diff = countDownTime - now;\n      if (diff < 0) {\n        mintBtn.removeAttribute(\"disabled\");\n        mintBtn.innerHTML = \"Mint My Shroomie\";\n        localStorage.removeItem(this.state.accountAddress);\n        clearInterval(interval);\n      } else {\n        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((diff % (1000 * 60)) / 1000);\n        mintBtn.setAttribute(\"disabled\", true);\n        mintBtn.innerHTML = `Next mint in ${minutes}m ${seconds}s`;\n      }\n    }, 1000);\n  };\n  checkIfCanMintHero = (lastMintTime) => {\n    const mintBtn = document.getElementById(\"mintBtnHero\");\n    const timeGap = 300000; //5min in milliseconds\n    const countDownTime = lastMintTime + timeGap;\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      const diff = countDownTime - now;\n      if (diff < 0) {\n        mintBtn.removeAttribute(\"disabled\");\n        mintBtn.innerHTML = \"Mint My Hero\";\n        localStorage.removeItem(this.state.accountAddress + \"Hero\");\n        clearInterval(interval);\n      } else {\n        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((diff % (1000 * 60)) / 1000);\n        mintBtn.setAttribute(\"disabled\", true);\n        mintBtn.innerHTML = `Next mint in ${minutes}m ${seconds}s`;\n      }\n    }, 1000);\n  };\n\n  setStakeTimer = () => {\n    const mintBtn = document.getElementById(\"stakeBtn\");\n    if (mintBtn !== undefined && mintBtn !== null) {\n      this.state.stakeTimeStamp === undefined || this.state.stakeTimeStamp === null\n        ? (mintBtn.innerHTML = \"Change No. of tokens on Stake\")\n        : this.checkIfCanStake(parseInt(this.state.stakeTimeStamp));\n    }\n  };\n  checkIfCanStake = (lastMintTime) => {\n    const mintBtn = document.getElementById(\"stakeBtn\");\n    const timeGap = 3 * 24 * 60 * 60 * 1000; //3days in milliseconds\n    const countDownTime = lastMintTime + timeGap;\n    const interval = setInterval(() => {\n      const now = new Date().getTime();\n      const diff = countDownTime - now;\n      if (diff < 0) {\n        mintBtn.removeAttribute(\"disabled\");\n        mintBtn.innerHTML = \"Change No. of tokens on Stake\";\n        clearInterval(interval);\n      } else {\n        const days = Math.floor((diff / (1000 * 60 * 60 * 24)) % 7);\n        const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);\n        const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n        const seconds = Math.floor((diff % (1000 * 60)) / 1000);\n        mintBtn.setAttribute(\"disabled\", true);\n        mintBtn.innerHTML = `Next Change in ${days}d ${hours}h ${minutes}m ${seconds}s`;\n      }\n    }, 1000);\n  };\n\n  loadWeb3 = async () => {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n    }\n    // else if (window.web3) {\n    //   window.web3 = new Web3(window.web3.currentProvider);\n    // }\n    else {\n      window.alert(\n        \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n      );\n    }\n  };\n\n  loadBlockchainData = async () => {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    if (accounts.length === 0) {\n      this.setState({ metamaskConnected: false });\n    } else {\n      this.setState({ metamaskConnected: true });\n      this.setState({ loading: true });\n      this.setState({ accountAddress: accounts[0] });\n      let accountBalance = await web3.eth.getBalance(accounts[0]);\n      accountBalance = web3.utils.fromWei(accountBalance, \"Ether\");\n      this.setState({ accountBalance });\n      this.setState({ loading: false });\n      const networkId = await web3.eth.net.getId();\n      const networkData = ShroomieS.networks[networkId];\n      if (networkData) {\n        this.setState({ loading: true });\n        const shroomieSContract = web3.eth.Contract(\n          ShroomieS.abi,\n          networkData.address\n        );\n        this.setState({ shroomieSContract });\n        this.setState({ contractDetected: true });\n        const shroomieSCount = await shroomieSContract.methods\n          .shroomYCounter()\n          .call();\n        this.setState({ shroomieSCount });\n        var i;\n        for (i = 1; i <= shroomieSCount; i++) {\n          const shroomY = await shroomieSContract.methods\n            .allShroomieS(i)\n            .call();\n          this.setState({\n            shroomieS: [...this.state.shroomieS, shroomY],\n          });\n          // console.log(shroomY)\n        }\n        let totalTokensMinted = await shroomieSContract.methods\n          .getNumberOfTokensMinted()\n          .call();\n        totalTokensMinted = totalTokensMinted.toNumber();\n        this.setState({ totalTokensMinted });\n        let totalTokensOwnedByAccount = await shroomieSContract.methods\n          .getTotalNumberOfTokensOwnedByAnAddress(this.state.accountAddress)\n          .call();\n        totalTokensOwnedByAccount = totalTokensOwnedByAccount.toNumber();\n        this.setState({ totalTokensOwnedByAccount });\n        let contractOwner = await shroomieSContract.methods\n          .getOwner()\n          .call();\n        this.setState({ contractOwner });\n        let mintPrice = await shroomieSContract.methods\n          .getMintPrice()\n          .call();\n        this.setState({ mintPrice });\n\n\n        const networkDataHero = Heroes.networks[networkId];\n        if (networkDataHero) {\n          const heroesContract = web3.eth.Contract(\n            Heroes.abi,\n            networkDataHero.address\n          );\n          this.setState({ heroesContract });\n\n          const stakeTimeStamp = await heroesContract.methods\n            .timestamps(this.state.accountAddress).call();\n          this.setState({ stakeTimeStamp });\n          const rewardEarned = await heroesContract.methods\n            .rewards(this.state.accountAddress).call();\n          this.setState({ rewardEarned });\n\n          const heroesCount = await heroesContract.methods\n            .heroCounter().call();\n          const usersCount = await heroesContract.methods\n            .userCounter().call();\n          this.setState({ heroesCount });\n          this.setState({ usersCount });\n\n          let mintPriceHero = await heroesContract.methods\n            .getMintPrice()\n            .call();\n          // console.log(mintPriceHero)\n          this.setState({ mintPriceHero });\n\n          for (i = 1; i <= heroesCount; i++) {\n            const hero = await heroesContract.methods\n              .allHeroes(i).call();\n            this.setState({\n              heroes: [...this.state.heroes, hero],\n            });\n            // console.log(hero);\n          }\n\n          for (i = 1; i <= usersCount; i++) {\n            var sales = [];\n            var stakes = [];\n            var salePrice = [];\n            var address = await heroesContract.methods\n              .allUsers(i).call();\n\n            var j = 1; var temp = 0;\n            for (j = 1; j <= heroesCount; j++) {\n              temp = await heroesContract.methods\n                .getSales(address, j).call();\n              sales = [...sales, temp];\n            }\n            for (j = 1; j <= heroesCount; j++) {\n              temp = await heroesContract.methods\n                .getStakes(address, j).call();\n              stakes = [...stakes, temp];\n            }\n            for (j = 1; j <= heroesCount; j++) {\n              temp = await heroesContract.methods\n                .getSalePrice(address, j).call();\n              salePrice = [...salePrice, temp];\n            }\n            var data = { userAddress: address, sales: sales, stakes: stakes, salePrice: salePrice };\n            this.setState({\n              users: [...this.state.users, data]\n            });\n            // console.log(data);\n          }\n\n        }\n\n        const networkDataHeroSale = HeroesSale.networks[networkId];\n        if (networkDataHeroSale) {\n          const heroesSaleContract = web3.eth.Contract(\n            HeroesSale.abi,\n            networkDataHeroSale.address\n          );\n          this.setState({ heroesSaleContract });\n          this.setState({ ...this.state, heroesSaleContractAddress: networkDataHeroSale.address });\n\n        }\n\n\n        const LLGContract = web3.eth.Contract(\n          LucidLandsGem.abi,\n          this.state.LLGContractAddress\n        );\n        this.setState({ LLGContract });\n        // console.log(LLGContract);\n\n        const balanceLLG = await LLGContract.methods.balanceOf(this.state.LLGContractOwner).call();\n        this.setState({ balanceLLG });\n        // console.log(window.web3.utils.fromWei(balanceLLG.toString(), \"Ether\"));\n\n        this.setState({ loading: false });\n      } else {\n        this.setState({ contractDetected: false });\n      }\n    }\n  };\n\n  connectToMetamask = async () => {\n    await window.ethereum.enable();\n    this.setState({ metamaskConnected: true });\n    window.location.reload();\n  };\n\n  setMetaData = async () => {\n    if (this.state.shroomieS.length !== 0) {\n      this.state.shroomieS.map(async (shroomy) => {\n        const result = await fetch(shroomy.tokenURI);\n        const metaData = await result.json();\n        this.setState({\n          shroomieS: this.state.shroomieS.map((shroomy) =>\n            shroomy.tokenId.toNumber() === Number(metaData.tokenId)\n              ? {\n                ...shroomy,\n                metaData,\n              }\n              : shroomy\n          ),\n        });\n      });\n    }\n  };\n\n  mintMyNFT = async (tokenPrice) => {\n    this.setState({ loading: true });\n\n    let shroomYCounter = await this.state.shroomieSContract.methods\n      .shroomYCounter()\n      .call();\n    shroomYCounter = shroomYCounter.toNumber();\n    shroomYCounter = shroomYCounter + 1;\n    shroomYCounter = '#' + shroomYCounter;\n\n    let index = 0;\n    data.forEach((item, i) => {\n      if (item.name === shroomYCounter) {\n        index = i;\n        return i;\n      }\n    });\n    // console.log(data[index]);\n\n    const uriIsUsed = await this.state.shroomieSContract.methods\n      .tokenURIExists(data[index].image)\n      .call();\n\n    const nameIsUsed = await this.state.shroomieSContract.methods\n      .tokenNameExists(data[index].name)\n      .call();\n\n    if (!nameIsUsed && !uriIsUsed) {\n\n      const price = window.web3.utils.toWei(tokenPrice.toString(), \"Ether\");\n      this.state.shroomieSContract.methods\n        .mintShroomY(data[index].name, data[index].image, price)\n        .send({ from: this.state.accountAddress, value: price })\n        .on(\"confirmation\", () => {\n          localStorage.setItem(this.state.accountAddress, new Date().getTime());\n          this.setState({ loading: false });\n          window.location.reload();\n        });\n    } else {\n      alert('Unable to Mint NFT');\n      this.setState({ loading: false });\n    }\n  };\n\n  randomPick = arr => {\n    let k = Math.random()\n    // get the first value that makes \"rnd int\" negative on subtraction\n    let res = arr.find(val => (k -= val) < 0)\n    return res || arr.pop() // else pop the last one\n  }\n  mintMyNFTHero = async (tokenPrice) => {\n    this.setState({ loading: true });\n    let prob = [0.003, 0.150, 0.350, 0.497]\n    let random = this.randomPick(prob);\n    let rarityid = 3;\n    for (let i = 0; i < prob.length; i++) {\n      if (prob[i] === random) {\n        rarityid = i;\n        break;\n      }\n    }\n    let heroes_rarity_match = [];\n    herodata.forEach((item, i) => {\n      if (item.rarity_id === rarityid) {\n        heroes_rarity_match = [...heroes_rarity_match, item];\n      }\n    });\n    var hero_matched = heroes_rarity_match[Math.floor(Math.random() * heroes_rarity_match.length)];\n    // console.log(hero_matched);\n\n    this.state.LLGContract.methods\n      .transfer(this.state.LLGContractOwner, window.web3.utils.toWei(tokenPrice.toString(), \"Ether\"))\n      .send({ from: this.state.accountAddress })\n      .once('receipt', (receipt) => {\n        this.state.heroesContract.methods\n          .mintHero(hero_matched.name, hero_matched.image)\n          .send({ from: this.state.accountAddress })\n          .on(\"confirmation\", () => {\n            localStorage.setItem(this.state.accountAddress + \"Hero\", new Date().getTime());\n            this.setState({ loading: false });\n            window.location.reload();\n          });\n      });\n\n  };\n\n  mintMyLLG = async (noOfToken) => {\n    this.setState({ loading: true });\n\n    //   // web3.eth.sendTransaction({ to: this.state.LLGContractOwner, from: this.state.accountAddress, value: 0.001 * noOfToken })\n    //   // .once('receipt', (receipt) => {\n    //   this.state.LLGContract.methods\n    //     .transferFrom(this.state.LLGContractOwner, this.state.accountAddress, window.web3.utils.toWei(noOfToken.toString(), \"Ether\"))\n    //     .send({ from: this.state.accountAddress })\n    //     .on(\"confirmation\", () => {\n    //       this.setState({ loading: false });\n    //       window.location.reload();\n    //     })\n    //   // }\n\n    this.setState({ loading: false });\n  };\n\n  toggleForSale = (tokenId) => {\n    this.setState({ loading: true });\n    this.state.shroomieSContract.methods\n      .toggleForSale(tokenId)\n      .send({ from: this.state.accountAddress })\n      .on(\"confirmation\", () => {\n        this.setState({ loading: false });\n        window.location.reload();\n      });\n  };\n\n  changeTokenPrice = (tokenId, newPrice) => {\n    this.setState({ loading: true });\n    const newTokenPrice = window.web3.utils.toWei(newPrice, \"Ether\");\n    this.state.shroomieSContract.methods\n      .changeTokenPrice(tokenId, newTokenPrice)\n      .send({ from: this.state.accountAddress })\n      .on(\"confirmation\", () => {\n        this.setState({ loading: false });\n        window.location.reload();\n      });\n  };\n\n  buyShroomY = (tokenId, price) => {\n    this.setState({ loading: true });\n    this.state.shroomieSContract.methods\n      .buyToken(tokenId)\n      .send({ from: this.state.accountAddress, value: price })\n      .on(\"confirmation\", () => {\n        this.setState({ loading: false });\n        window.location.reload();\n      });\n  };\n\n  giftShroomY = (tokenId, receiver) => {\n    this.setState({ loading: true });\n    this.state.shroomieSContract.methods\n      .giftToken(tokenId, receiver)\n      .send({ from: this.state.accountAddress })\n      .on(\"confirmation\", () => {\n        this.setState({ loading: false });\n        window.location.reload();\n      });\n  };\n\n  toggleSale = (tokenId, amount, toggle) => {\n    // console.log(this.state.heroesSaleContractAddress)\n    this.setState({ loading: true });\n    this.state.heroesContract.methods\n      .toggleForSale(tokenId, amount, toggle, this.state.heroesSaleContractAddress)\n      .send({ from: this.state.accountAddress })\n      .on(\"confirmation\", () => {\n        this.setState({ loading: false });\n        window.location.reload();\n      });\n  };\n\n\n  calculateReward = async (now, tokenName) => {\n    // const reward = [2000, 1000, 500, 300];\n    let timestamp = await this.state.heroesContract.methods\n      .timestamps(this.state.accountAddress)\n      .call();\n    timestamp = timestamp.toNumber();\n    if (timestamp === 0) {\n      return 0;\n    } else {\n      let diff = now - timestamp;\n      diff = diff / (365 * 24 * 60 * 60 * 1000);\n\n      let matchedItem;\n      herodata.forEach((item, i) => {\n        if (item.name === tokenName) {\n          matchedItem = item;\n        }\n      });\n      // let rarity_id = matchedItem.rarity_id;\n      let res = diff * (matchedItem.reward_per_year);\n      res = window.web3.utils.toWei(res.toString(), \"Ether\");\n      return res;\n    }\n  }\n\n  toggleStake = async (tokenId, tokenName, amount, toggle) => {\n    this.setState({ loading: true });\n    const now = new Date().getTime();\n    let reward = await this.calculateReward(now, tokenName);\n    // console.log(reward);\n\n    this.state.heroesContract.methods\n      .toggleForStake(tokenId, amount, toggle, now, reward)\n      .send({ from: this.state.accountAddress })\n      .on(\"confirmation\", () => {\n        this.setState({ loading: false });\n        window.location.reload();\n      });\n\n  };\n\n  changeTokenPriceHero = (tokenId, newPrice) => {\n    this.setState({ loading: true });\n    const newTokenPrice = window.web3.utils.toWei(newPrice, \"Ether\");\n    this.state.heroesContract.methods\n      .setPrice(tokenId, newTokenPrice)\n      .send({ from: this.state.accountAddress })\n      .on(\"confirmation\", () => {\n        this.setState({ loading: false });\n        window.location.reload();\n      });\n  };\n\n  buyHero = (tokenId, amount, from, price) => {\n    this.setState({ loading: true });\n    this.state.LLGContract.methods\n      .transfer(from, window.web3.utils.toWei(price.toString(), \"Ether\"))\n      .send({ from: this.state.accountAddress })\n      .on(\"confirmation\", () => {\n        this.state.heroesSaleContract.methods\n          .buyHero(tokenId, amount, from)\n          .send({ from: this.state.accountAddress })\n          .on(\"confirmation\", () => {\n            this.setState({ loading: false });\n            window.location.reload();\n          });\n      });\n  };\n\n  giftHero = (tokenId, amount, to) => {\n    this.setState({ loading: true });\n\n    this.state.heroesSaleContract.methods\n      .giftHero(tokenId, amount, to)\n      .send({ from: this.state.accountAddress })\n      .on(\"confirmation\", () => {\n        this.setState({ loading: false });\n        window.location.reload();\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"w-100\">\n        {!this.state.metamaskConnected ? (\n          <ConnectToMetamask connectToMetamask={this.connectToMetamask} />\n        ) : !this.state.contractDetected ? (\n          <ContractNotDeployed />\n        ) : this.state.loading ? (\n          <Loading />\n        ) : (\n          <>\n            <HashRouter basename=\"/\">\n              <Navbar state={{ accountAddress: this.state.accountAddress, contractOwner: this.state.contractOwner }} />\n              <Route\n                path=\"/\"\n                exact\n                render={() => (\n                  <AccountDetails\n                    accountAddress={this.state.accountAddress}\n                    accountBalance={this.state.accountBalance}\n                  />\n                )}\n              />\n              <Route\n                path=\"/mint\"\n                render={() => (\n                  <FormAndPreview\n                    mintMyNFT={this.mintMyNFT}\n                    mintPrice={this.state.mintPrice}\n                    setMintBtnTimer={this.setMintBtnTimer}\n                    mintMyNFTHero={this.mintMyNFTHero}\n                    mintPriceHero={this.state.mintPriceHero}\n                    setMintBtnTimerHero={this.setMintBtnTimerHero}\n                    mintPriceLLG={this.state.mintPriceLLG}\n                    mintMyLLG={this.mintMyLLG}\n                    balanceLLG={this.state.balanceLLG}\n                  />\n                )}\n              />\n              <Route\n                path=\"/marketplace\"\n                render={() => (\n                  <AllShroomieS\n                    shroomieSContract={this.state.shroomieSContract}\n                    accountAddress={this.state.accountAddress}\n                    shroomieS={this.state.shroomieS}\n                    totalTokensMinted={this.state.totalTokensMinted}\n                    buyShroomY={this.buyShroomY}\n                  />\n                )}\n              />\n              <Route\n                path=\"/marketplace-hero\"\n                render={() => (\n                  <AllHeros\n                    accountAddress={this.state.accountAddress}\n                    heroesContract={\n                      this.state.heroesContract\n                    }\n                    totalInMarketplace={this.state.totalInMarketplace}\n                    marketplaceData={this.state.marketplaceData}\n                    changeTokenPriceHero={this.changeTokenPriceHero}\n                    toggleForSaleHero={this.toggleForSaleHero}\n                    buyHero={this.buyHero}\n                  />\n                )}\n              />\n              <Route\n                path=\"/my-tokens\"\n                render={() => (\n                  <MyShroomieS\n                    shroomieSContract={this.state.shroomieSContract}\n                    accountAddress={this.state.accountAddress}\n                    shroomieS={this.state.shroomieS}\n                    totalTokensOwnedByAccount={\n                      this.state.totalTokensOwnedByAccount\n                    }\n                    changeTokenPrice={this.changeTokenPrice}\n                    toggleForSale={this.toggleForSale}\n                    giftShroomY={this.giftShroomY}\n                  />\n                )}\n              />\n              <Route\n                path=\"/my-hero\"\n                render={() => (\n                  <MyHeros\n                    accountAddress={this.state.accountAddress}\n                    heroesContract={\n                      this.state.heroesContract\n                    }\n                    totalMyHero={this.state.totalMyHero}\n                    myHeroData={this.state.myHeroData}\n                    toggleSale={this.toggleSale}\n                    toggleStake={this.toggleStake}\n                    changeTokenPriceHero={this.changeTokenPriceHero}\n                    setStakeTimer={this.setStakeTimer}\n                    rewardEarned={this.state.rewardEarned}\n                    giftHero={this.giftHero}\n                  />\n                )}\n              />\n              <Route\n                path=\"/queries\"\n                render={() => (\n                  <Queries shroomieSContract={this.state.shroomieSContract} />\n                )}\n              />\n              <Route\n                path=\"/change-price\"\n                render={() => (\n                  <ChangeMintPrice shroomieSContract={this.state.shroomieSContract}\n                    heroesContract={this.state.heroesContract}\n                    accountAddress={this.state.accountAddress}\n                    mintPrice={this.state.mintPrice}\n                    mintPriceHero={this.state.mintPriceHero} />\n                )}\n              />\n              <Route\n                path=\"/hero-detail/:name\"\n                render={() => (\n                  <HeroDetail\n                    shroomieSContract={this.state.shroomieSContract}\n                    accountAddress={this.state.accountAddress}\n                    mintPrice={this.state.mintPrice} />\n                )} />\n            </HashRouter>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}